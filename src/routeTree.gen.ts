/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as NonlazyImport } from './routes/nonlazy'
import { Route as LoginImport } from './routes/login'

// Create Virtual Routes

const TermsLazyImport = createFileRoute('/terms')()
const PrivacyLazyImport = createFileRoute('/privacy')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TermsLazyRoute = TermsLazyImport.update({
  path: '/terms',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/terms.lazy').then((d) => d.Route))

const PrivacyLazyRoute = PrivacyLazyImport.update({
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/privacy.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const NonlazyRoute = NonlazyImport.update({
  path: '/nonlazy',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/nonlazy': {
      id: '/nonlazy'
      path: '/nonlazy'
      fullPath: '/nonlazy'
      preLoaderRoute: typeof NonlazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyLazyImport
      parentRoute: typeof rootRoute
    }
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LoginRoute,
  NonlazyRoute,
  RegisterRoute,
  AboutLazyRoute,
  PrivacyLazyRoute,
  TermsLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "children": [
        "/",
        "/login",
        "/nonlazy",
        "/register",
        "/about",
        "/privacy",
        "/terms"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/nonlazy": {
      "filePath": "nonlazy.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/privacy": {
      "filePath": "privacy.lazy.tsx"
    },
    "/terms": {
      "filePath": "terms.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
